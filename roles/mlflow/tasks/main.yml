---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes

- name: Check if Docker is installed
  command: docker --version
  register: docker_installed
  failed_when: false
  changed_when: false

- name: Check if Docker Compose is installed
  command: docker compose version
  register: docker_compose_installed
  failed_when: false
  changed_when: false

- name: Display Docker status
  debug:
    msg: "Docker is {{ 'already installed' if docker_installed.rc == 0 else 'not installed' }}"

- name: Display Docker Compose status
  debug:
    msg: "Docker Compose is {{ 'already installed' if docker_compose_installed.rc == 0 else 'not installed' }}"

# Docker installation steps removed

- name: Create docker cli-plugins directory
  file:
    path: "/home/{{ ansible_user }}/.docker/cli-plugins"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  when: docker_compose_installed.rc != 0

- name: Download Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
    dest: "/home/{{ ansible_user }}/.docker/cli-plugins/docker-compose"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  when: docker_compose_installed.rc != 0

- name: Create MLops directory structure
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - "{{ mlflow_base_dir }}"
    - "{{ mlflow_base_dir }}/mlflow"
    - "{{ mlflow_base_dir }}/airflow/dags"
    - "{{ mlflow_base_dir }}/airflow/logs"
    - "{{ mlflow_base_dir }}/airflow/plugins"

- name: Create docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: "{{ mlflow_base_dir }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create .env file
  template:
    src: .env.j2
    dest: "{{ mlflow_base_dir }}/.env"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Create MLflow Dockerfile
  template:
    src: Dockerfile.j2
    dest: "{{ mlflow_base_dir }}/mlflow/Dockerfile"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create requirements.txt
  template:
    src: requirements.txt.j2
    dest: "{{ mlflow_base_dir }}/mlflow/requirements.txt"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Create wait-for-it script
  template:
    src: wait-for-it.sh.j2
    dest: "{{ mlflow_base_dir }}/wait-for-it.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create start script
  template:
    src: start.sh.j2
    dest: "{{ mlflow_base_dir }}/start.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Verify Docker Compose installation
  command: docker compose version
  register: docker_compose_verify
  changed_when: false
  failed_when: false

- name: Display Docker Compose verification result
  debug:
    msg: "Docker Compose verification: {{ 'Success' if docker_compose_verify.rc == 0 else 'Failed' }}"

- name: Build and start MLflow services using shell command
  shell: |
    cd {{ mlflow_base_dir }}
    docker compose up -d --build
  become: yes
  register: docker_compose_result
  failed_when: docker_compose_result.rc != 0

- name: Wait for MLflow service to be ready
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 5000
    delay: 10
    timeout: 300
